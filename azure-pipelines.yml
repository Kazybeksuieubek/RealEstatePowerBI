trigger:
- main

variables:
- group: PowerBISecrets  # üîπ Links Variable Group containing PowerBIClientSecret

stages:
- stage: Dev
  displayName: 'Deploy to Dev'
  jobs:
  - job: DeployDev
    displayName: 'Deploy Report to Dev Workspace'
    pool:
      name: PPAgent
    steps:
    - checkout: self
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          Write-Host "üîπ Starting deployment to Dev..."

          # Install Power BI PowerShell module if not installed
          if (!(Get-Module -ListAvailable -Name MicrosoftPowerBIMgmt)) {
              Write-Host "‚öôÔ∏è Installing Power BI PowerShell module..."
              Install-Module -Name MicrosoftPowerBIMgmt -Scope CurrentUser -Force -AllowClobber -Confirm:$false
          }

          # Retrieve and validate Power BI Client Secret
          $clientSecret = "$env:PowerBIClientSecret"

          if ([string]::IsNullOrEmpty($clientSecret)) {
              Write-Error "‚ùå PowerBIClientSecret is empty or missing!"
              exit 1
          }

          Write-Host "‚úÖ PowerBIClientSecret successfully retrieved."

          # Authenticate with Power BI using Service Principal
          $tenantId = "b41b72d0-4e9f-4c26-8a69-f949f367c91d"
          $clientId = "786263df-9ecf-4ecd-b109-a8cefd1173e2"
          
          Write-Host "üîë Creating credential object for authentication..."
          $securePassword = ConvertTo-SecureString $clientSecret -AsPlainText -Force
          $credential = New-Object System.Management.Automation.PSCredential ($clientId, $securePassword)

          Write-Host "üîë Logging into Power BI..."
          Connect-PowerBIServiceAccount -Tenant $tenantId -ApplicationId $clientId -Credential $credential

          # Deploy the report
          $workspaceId = "7af6f710-e8b3-4fd6-98a1-ad4844254733"  # Dev Workspace ID
          $reportPath = "$(System.DefaultWorkingDirectory)/Reports/RealEstateReportDev.pbix"
          $reportName = "Real Estate Report Dev"

          Write-Host "üì§ Deploying Power BI report to Dev..."
          New-PowerBIReport -WorkspaceId $workspaceId -Path $reportPath -Name $reportName
          Write-Host "‚úÖ Deployment to Dev completed successfully."
      env:
        PowerBIClientSecret: $(PowerBIClientSecret)

- stage: QA
  displayName: 'Deploy to QA'
  dependsOn: Dev
  condition: succeeded()
  jobs:
  - job: DeployQA
    displayName: 'Deploy Report to QA Workspace'
    pool:
      name: PPAgent
    steps:
    - checkout: self
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          Write-Host "üîπ Starting deployment to QA..."

          if (!(Get-Module -ListAvailable -Name MicrosoftPowerBIMgmt)) {
              Write-Host "‚öôÔ∏è Installing Power BI PowerShell module..."
              Install-Module -Name MicrosoftPowerBIMgmt -Scope CurrentUser -Force -AllowClobber -Confirm:$false
          }

          $clientSecret = "$env:PowerBIClientSecret"

          if ([string]::IsNullOrEmpty($clientSecret)) {
              Write-Error "‚ùå PowerBIClientSecret is empty or missing!"
              exit 1
          }

          Write-Host "‚úÖ PowerBIClientSecret successfully retrieved."

          $tenantId = "b41b72d0-4e9f-4c26-8a69-f949f367c91d"
          $clientId = "786263df-9ecf-4ecd-b109-a8cefd1173e2"

          Write-Host "üîë Creating credential object for authentication..."
          $securePassword = ConvertTo-SecureString $clientSecret -AsPlainText -Force
          $credential = New-Object System.Management.Automation.PSCredential ($clientId, $securePassword)

          Write-Host "üîë Logging into Power BI..."
          Connect-PowerBIServiceAccount -Tenant $tenantId -ApplicationId $clientId -Credential $credential

          $workspaceId = "8903b2fd-67f8-4191-b2c4-f9687ee3fd17"  # QA Workspace ID
          $reportPath = "$(System.DefaultWorkingDirectory)/Reports/RealEstateReportQA.pbix"
          $reportName = "Real Estate Report QA"

          Write-Host "üì§ Deploying Power BI report to QA..."
          New-PowerBIReport -WorkspaceId $workspaceId -Path $reportPath -Name $reportName
          Write-Host "‚úÖ Deployment to QA completed successfully."
      env:
        PowerBIClientSecret: $(PowerBIClientSecret)

- stage: Prod
  displayName: 'Deploy to Prod'
  dependsOn: QA
  condition: succeeded()
  jobs:
  - job: DeployProd
    displayName: 'Deploy Report to Prod Workspace'
    pool:
      name: PPAgent
    steps:
    - checkout: self
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          Write-Host "üîπ Starting deployment to Prod..."

          if (!(Get-Module -ListAvailable -Name MicrosoftPowerBIMgmt)) {
              Write-Host "‚öôÔ∏è Installing Power BI PowerShell module..."
              Install-Module -Name MicrosoftPowerBIMgmt -Scope CurrentUser -Force -AllowClobber -Confirm:$false
          }

          $clientSecret = "$env:PowerBIClientSecret"

          if ([string]::IsNullOrEmpty($clientSecret)) {
              Write-Error "‚ùå PowerBIClientSecret is empty or missing!"
              exit 1
          }

          Write-Host "‚úÖ PowerBIClientSecret successfully retrieved."

          $tenantId = "b41b72d0-4e9f-4c26-8a69-f949f367c91d"
          $clientId = "786263df-9ecf-4ecd-b109-a8cefd1173e2"

          Write-Host "üîë Creating credential object for authentication..."
          $securePassword = ConvertTo-SecureString $clientSecret -AsPlainText -Force
          $credential = New-Object System.Management.Automation.PSCredential ($clientId, $securePassword)

          Write-Host "üîë Logging into Power BI..."
          Connect-PowerBIServiceAccount -Tenant $tenantId -ApplicationId $clientId -Credential $credential

          $workspaceId = "9e99227a-0de6-4073-b18c-e55f85246632"  # Prod Workspace ID
          $reportPath = "$(System.DefaultWorkingDirectory)/Reports/RealEstateReportProd.pbix"
          $reportName = "Real Estate Report Prod"

          Write-Host "üì§ Deploying Power BI report to Prod..."
          New-PowerBIReport -WorkspaceId $workspaceId -Path $reportPath -Name $reportName
          Write-Host "‚úÖ Deployment to Prod completed successfully."
      env:
        PowerBIClientSecret: $(PowerBIClientSecret)
